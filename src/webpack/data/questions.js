export default {
  match: [
    {
      title: '文字のマッチング',
      explanation: `
|単語|備考|
|:----|:----|
|左|右|
      `,
      question: '「県」の文字が入っている文字列のみを抽出する正規表現を入力してください。',
      samples: [
        '大阪府',
        '長崎県',
        '東京都',
        '和歌山県',
      ],
      results: [
        '長崎県',
        '和歌山県',
      ],
      examples: [
        '県',
      ],
    },
    {
      title: '文字列のマッチング',
      question: '「グレン」の文字が入っている文字列のみを抽出する正規表現を入力してください。',
      samples: [
        'グレンフィディック',
        'マッカラン',
        'グレンリベット',
        'ボウモア',
      ],
      results: [
        'グレンフィディック',
        'グレンリベット',
      ],
      examples: [
        'グレン',
      ],
    },
    {
      title: '行頭のマッチング',
      explanation: `
行の先頭が特定の文字のものにマッチするような正規表現を書きたい場合は\`^\`記号を使用します。

例えば、「行の先頭がA」という正規表現は\`^A\`となります。
      `,
      question: '「山田」の文字から始まる文字列のみを抽出する正規表現を入力してください。',
      samples: [
        '山田花子',
        '小山田壮平',
        '山田孝之',
      ],
      results: [
        '山田花子',
        '山田孝之',
      ],
      examples: [
        '^山田',
      ],
    },
    {
      title: '行末のマッチング',
      explanation: `
行の末尾が特定の文字のものにマッチするような正規表現を書きたい場合は\`$\`記号を使用します。

例えば、「行の末尾がA」という正規表現は\`A$\`となります。
      `,
      question: '「子」の文字で終わる文字列のみを抽出する正規表現を入力してください。',
      samples: [
        '山田花子',
        '子安武人',
        '泉ピン子',
      ],
      results: [
        '山田花子',
        '泉ピン子',
      ],
      examples: [
        '子$',
      ],
    },
    {
      title: '特殊文字マッチング',
      explanation: `
正規表現として特殊な機能を持つ文字自体をマッチングに使用したい場合は、文字の直前に\`\\\`を付ける必要があります。

例えば、正規表現に\`^\`を使用したい場合は、\`\\^\`と記述します。
      `,
      question: '「$」を含む文字列のみを抽出する正規表現を入力してください。',
      samples: [
        '$1.2',
        '120円',
        '$100',
        '€1.5',
      ],
      results: [
        '$1.2',
        '$100',
      ],
      examples: [
        '\\$',
      ],
    },
    {
      title: 'どれか１文字にマッチング',
      explanation: `
指定したどれか１文字にマッチングするような正規表現を書きたい場合は\`[]\`を使用します。

例えば、「山」か「川」にマッチングするような正規表現は\`[山川]\`となります。

他にも、「整数値」にマッチングするような正規表現は\`[0123456789]\`となります。

この場合、他の書き方として\`[0-9]\`のように書くことも出来ます。
      `,
      question: '数字で始まる文字列を抽出する正規表現を入力してください。',
      samples: [
        '2017年',
        '平成20年',
        '9時',
      ],
      results: [
        '2017年',
        '9時',
      ],
      examples: [
        '^[0-9]',
      ],
    },
    {
      title: 'どれかにマッチング',
      explanation: `
「AとB、どちらかの文字列を含んでいる」ものにマッチングする正規表現を書きたい場合は、\`|\`を使用します。

例えば、「学園」と「学院」どちらかにマッチングする正規表現は\`(学園|学院)\`となります。
      `,
      question: '拡張子が「jpg」か「png」のファイルのみを抽出する正規表現を入力してください。',
      samples: [
        'img_photo.jpg',
        'compress_jpg.exe',
        'icn_person.png',
        'main.js',
      ],
      results: [
        'img_photo.jpg',
        'icn_person.png',
      ],
      examples: [
        '(png|jpg)$',
      ],
    },
    {
      title: '量指定子を利用したマッチング',
      explanation: `
「特定の文字をn回繰り返している」ものにマッチングする正規表現を書きたい場合は、\`{n}\`を使用します。

例えば、数字を3回繰り返しているものにマッチングする正規表現は\`[0-9]{3}\`となります。
      `,
      question: '郵便番号のみを抽出する正規表現を入力してください。',
      samples: [
        '090-1234-5678',
        '123-4567',
        '012-3456-7890',
        '012-3456',
      ],
      results: [
        '123-4567',
        '012-3456',
      ],
      examples: [
        '^[0-9]{3}-[0-9]{4}$',
      ],
    },
    {
      title: '量指定子を利用したマッチング2',
      explanation: `
「特定の文字をn回以上m回以下繰り返している」ものにマッチングする正規表現を書きたい場合は、\`{n,m}\`を使用します。

例えば、数字を2回以上10回以下繰り返しているものにマッチングする正規表現は\`[0-9]{2,10}\`となります。

また、「特定の文字をn回以上繰り返している」という場合は\`{n,}\`、「特定の文字をn回以下繰り返している」という場合は\`{,n}\`というように書けます。
      `,
      question: '4文字以上10文字以下の文字列のみを抽出する正規表現を入力してください。',
      samples: [
        '123',
        '123456',
        '12345678901',
        '東京特許許可局',
      ],
      results: [
        '123456',
        '東京特許許可局',
      ],
      examples: [
        '^.{4,10}$',
      ],
    },
  ],
};
